# It represent the data in the Linked List
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class LinkedList:
    def __init__(self):
        self.head=None
    def printList(self):
        tmp=self.head
        while tmp:
            print(tmp.data,end=' ')
            tmp=tmp.next
    def insertAtBegining(self,value):
        new_Node=Node(value)
        new_Node.next=self.head
        self.head=new_Node
    def insertAtgivenPosition(self,value,prevNode):
        new_Node=Node(value)
        if prevNode is None:
            print('LList is empty')
            return
        new_Node.next = prevNode.next
        prevNode.next=new_Node
    def insertAtEnd(self,value):
        new_Node=Node(value)
        if self.head is None:
            return
        tmp=self.head
        while tmp.next:
            tmp=tmp.next
        tmp.next=new_Node
    def reverse(self):
        prev=None
        current=self.head
        while current is not None:
            next=current.next
            current.next=prev
            prev=current
            current=next
        self.head=prev



llist=LinkedList()
llist.head=Node(1)
second=Node(2)
third=Node(3)

llist.head.next=second
second.next=third

# llist.insertAtBegining(5)
# llist.insertAtgivenPosition(6,2)

#Insertion in linkedList
llist.insertAtEnd(67)
llist.reverse()
llist.printList()



